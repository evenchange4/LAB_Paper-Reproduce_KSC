# Autogenerated with SMOP version 0.23
# main.py ksc_toy/dhat_shift.m -o ksc_toy/dhat_shift.py
from __future__ import division
import numpy as np
from scipy.io import loadmat,savemat
import os

def dhat(x, y):
    min_d = scale_d(x, y)
    L = max(y.shape)
    range_ = range(- 5, 6)
    for shift in range_:
        if shift < 0:
            yshift = np.array([y[(- shift + 1 -1):y.shape[0]], np.zeros(shape=(1, - shift), dtype='float64')]).reshape(1, -1)
        else:
            yshift = np.array([np.zeros(shape=(1, shift), dtype='float64'), y[0:y.shape[0] - shift]]).reshape(1, -1)
        cur_d = scale_d(x, yshift)
        if cur_d <= min_d:
            optshift = shift
            opty = yshift
            min_d = cur_d
    dist = min_d
    return dist, optshift, opty
def scale_d(x, y):
    alpha = np.dot(x, y.T) / (np.dot(y, y.T))
    dist = norm(x - np.dot(alpha, y)) / norm(x)
    return dist
